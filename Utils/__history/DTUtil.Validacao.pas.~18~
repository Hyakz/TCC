unit DTUtil.Validacao;

interface

uses
  System.SysUtils, Vcl.Controls, Vcl.StdCtrls, Vcl.CheckLst, Vcl.ComCtrls, Vcl.Dialogs, System.Classes;

type
  TValidacaoTipo = (vtVazio, vtNumerico, vtData, vtSelecionado);

procedure Validar(oComponente: TControl; oValidacao: TValidacaoTipo; cMensagem: String);

implementation

procedure Validar(oComponente: TControl; oValidacao: TValidacaoTipo; cMensagem: String);
var
  Texto: String;
  Numero: Integer;
  Data: TDateTime;
begin
  Texto := '';

  if oComponente is TEdit then
    Texto := TEdit(oComponente).Text
  else
  if oComponente is TComboBox then
    Texto := TComboBox(oComponente).Text
  else
  if oComponente is TCheckBox then
    Texto := BoolToStr(TCheckBox(oComponente).Checked, True)
  else
  if oComponente is TDateTimePicker then
    Texto := DateTimeToStr(TDateTimePicker(oComponente).DateTime)
  else
    Texto := '';

  case Validacao of
    vtVazio:
      if Texto.Trim = '' then
        ShowMessage(cMensagem);

    vtNumerico:
      if not TryStrToInt(Texto, Numero) then
        ShowMessage(cMensagem);

    vtData:
      if not TryStrToDate(Texto, Data) then
        ShowMessage(cMensagem);

    vtSelecionado:
      if (oComponente is TCheckBox) and not TCheckBox(oComponente).Checked then
        ShowMessage(cMensagem);
  end;

  if (Texto.Trim = '') or (not TryStrToInt(Texto, Numero)) or (not TryStrToDate(Texto, Data)) then
  begin
    if oComponente is TEdit then
      TEdit(oComponente).SetFocus
    else
    if oComponente is TComboBox then
      TComboBox(oComponente).SetFocus
    else
    if oComponente is TCheckBox then
      TCheckBox(oComponente).SetFocus
    else
    if oComponente is TDateTimePicker then
      TDateTimePicker(oComponente).SetFocus;
  end;
end;

end.

